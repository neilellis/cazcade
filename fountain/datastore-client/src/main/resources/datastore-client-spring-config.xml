<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="classpath:liquid-spring-config.xml"/>
    <import resource="classpath:messaging-context.xml"/>

    <bean id="requestValidator" class="cazcade.fountain.validation.FountainRequestValidatorImpl">
        <property name="requestValidatorMap">
            <map>
                <entry key="CREATE_USER">
                    <bean class="cazcade.fountain.validation.request.CreateUserRequestValidator"
                          p:entityValidator-ref="entityValidator"/>
                </entry>
                <entry key="CREATE_POOL_OBJECT">
                    <bean class="cazcade.fountain.validation.request.CreatePoolObjectRequestValidator"
                          p:entityValidator-ref="entityValidator"/>
                </entry>
                <entry key="UPDATE_POOL_OBJECT">
                    <bean class="cazcade.fountain.validation.request.UpdatePoolObjectRequestValidator"
                          p:entityValidator-ref="entityValidator"/>
                </entry>
            </map>
        </property>
        <property name="defaultValidator">
            <bean class="cazcade.fountain.validation.request.DefaultRequestValidator"
                  p:entityValidator-ref="entityValidator"/>
        </property>
    </bean>

    <bean id="messageSender" class="cazcade.fountain.messaging.LiquidMessageSender"
          p:pubSub-ref="pubSub"/>

    <bean id="remoteDataStore" class="cazcade.fountain.datastore.client.FountainRemoteDataStore"
          destroy-method="stopIfNotStopped" p:pubSub-ref="pubSub"
          p:securityValidator-ref="securityValidator" p:requestValidator-ref="requestValidator"
          p:messageSender-ref="messageSender" init-method="startIfNotStarted"/>

    <bean id="syncRemoteDataStore" class="cazcade.fountain.datastore.client.FountainRemoteDataStore"
          destroy-method="stopIfNotStopped" p:pubSub-ref="pubSub"
          p:securityValidator-ref="securityValidator" p:requestValidator-ref="requestValidator"
          p:messageSender-ref="messageSender" init-method="startIfNotStarted">
        <property name="alwaysSynchronous" value="true"/>
    </bean>

    <bean id="authorizationService" class="cazcade.fountain.datastore.client.validation.AuthorizationServiceImpl">
        <property name="dataStore" ref="remoteDataStore"/>
    </bean>

    <bean id="authDataStore" class="cazcade.fountain.datastore.client.FountainRemoteDataStore"
          p:pubSub-ref="pubSub"
          destroy-method="stopIfNotStopped">
        <property name="requestValidator" ref="requestValidator"/>
        <property name="messageSender" ref="messageSender"/>
    </bean>

    <bean id="securityValidator" class="cazcade.fountain.datastore.client.validation.SecurityValidatorImpl"
          p:authorizationService-ref="authorizationService"/>

    <bean id="entityValidator" class="cazcade.fountain.validation.FountainEntityValidator">
        <property name="entityValidatorMap">
            <map>
                <entry key="Identity.Person.User">
                    <bean class="cazcade.fountain.validation.entity.UserEntityValidator"/>
                </entry>
            </map>
        </property>
        <property name="formatValidator" ref="formatValidator"/>
    </bean>

    <bean id="clientSessionManager" init-method="start" destroy-method="stop"
          class="cazcade.fountain.messaging.session.ClientSessionManager"/>



    <!--<camel:camelContext id="localDataStoreCamelContext">-->
    <!--&lt;!&ndash;<camel:route>&ndash;&gt;-->
    <!--&lt;!&ndash;<camel:from uri="mina:tcp://localhost:6200?sync=true"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<camel:to uri="bean:localDataStore"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</camel:route>&ndash;&gt;-->
    <!--</camel:camelContext>-->


</beans>